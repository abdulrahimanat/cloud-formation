AWSTemplateFormatVersion: '2010-09-09'
Description: CFT for organization cloud trail resources
Parameters:
  OrgId:
    Type: String
    Description: This organization's orgid
    AllowedPattern: "^o-.*$"
  TrailName:
    Type: String
    Description: provide Cloud Trail Name
Resources:
    S3Bucket: 
      DeletionPolicy: Retain
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
    BucketPolicy: 
      Type: AWS::S3::BucketPolicy
      Properties: 
        Bucket: 
          Ref: S3Bucket
        PolicyDocument: 
          Version: "2012-10-17"
          Statement: 
            - 
              Sid: "AWSCloudTrailAclCheck"
              Effect: "Allow"
              Principal: 
                Service: "cloudtrail.amazonaws.com"
              Action: "s3:GetBucketAcl"
              Resource: 
                !Sub |-
                  arn:aws:s3:::${S3Bucket}
            - 
              Sid: "AWSCloudTrailWrite"
              Effect: "Allow"
              Principal: 
                Service: "cloudtrail.amazonaws.com"
              Action: "s3:PutObject"
              Resource:
                !Sub |-
                  arn:aws:s3:::${S3Bucket}/AWSLogs/${AWS::AccountId}/*
              Condition:
                StringEquals:
                  s3:x-amz-acl: "bucket-owner-full-control"
            - 
              Sid: "AWSCloudTrailWriteForOrg"
              Effect: "Allow"
              Principal: 
                Service: "cloudtrail.amazonaws.com"
              Action: "s3:PutObject"
              Resource:
                !Join [ "", ["arn:aws:s3:::", !Ref S3Bucket, "/AWSLogs/" , !Ref OrgId , "/*"  ] ]
              Condition:
                StringEquals:
                  s3:x-amz-acl: "bucket-owner-full-control"
    OrganizationTrail:
      Type: 'Custom::OrganizationTrail'
      Properties:
        ServiceToken: !GetAtt CustomOrgCloudTrailLambda.Arn
        Region: !Ref "AWS::Region"
        S3Bucket : !Ref S3Bucket
        CloudTrailName: !Ref TrailName
        CloudTrailArn:
          !Sub |-
             arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${TrailName}

    CustomOrgCloudTrailLambda:
      Properties:
        Code:
          S3Bucket: cf-abdul
          S3Key: function.zip
        Description: Cloudformation custom resource for Org CloudTrail
        Handler: lambda_function.lambda_handler
        Role: !GetAtt 'CustomOrgCloudTrailLambdaExecutionRole.Arn'
        Runtime: python3.8
        Timeout: 60
      Type: AWS::Lambda::Function
    CustomOrgCloudTrailLambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Action:
                - sts:AssumeRole
              Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        Policies:
          - PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - cloudtrail:*  
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
                - Effect: Allow
                  Action:
                    - organizations:*  
                  Resource: "*" 
                - Effect: Allow
                  Action:
                    - "iam:CreateServiceLinkedRole"
                    - "iam:GetRole"  
                  Resource: "arn:aws:iam::*:role/aws-service-role/*"             
            PolicyName: !Sub 'CustomOrgCloudTrailLambdaExecutionPolicy-${AWS::StackName}'
